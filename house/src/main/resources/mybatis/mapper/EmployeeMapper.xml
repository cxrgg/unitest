<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbsf.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.hbsf.pojo.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
    <result column="house" property="house" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, password, salt, sex, phone, idcard, status, rank, house
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hbsf.pojo.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hbsf.pojo.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbsf.pojo.Employee" useGeneratedKeys="true" keyProperty="id" >
    insert into employee (id, name, password, 
      salt, sex, phone, idcard, 
      status, rank, house
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, #{house,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hbsf.pojo.Employee" >

    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="house != null" >
        house,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="house != null" >
        #{house,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbsf.pojo.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.house != null" >
        house = #{record.house,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      rank = #{record.rank,jdbcType=INTEGER},
      house = #{record.house,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbsf.pojo.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="house != null" >
        house = #{house,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbsf.pojo.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      house = #{house,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--  List<NavBean> selectNavs(Employee employee);-->
  <resultMap id="powerMap" type="com.hbsf.pojo.Power">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="url" property="url" jdbcType="VARCHAR"/>
    <result column="menutype" property="menutype" jdbcType="VARCHAR"/>
    <result column="powerCharacteristic" property="powercharacteristic" jdbcType="VARCHAR"/>
    <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
  </resultMap>
  <select id="selectNavs" parameterType="int" resultMap="powerMap">
     Select p.* from employee e,employee_role er,power p,role r,role_power rp where e.id=er.empid and er.roleid=r.id and r.id = rp.roleid and rp.powerid = p.id and e.id = #{id};
  </select>
  <select id="selectBySelect" resultType="com.hbsf.pojo.Employee" parameterType="com.hbsf.pojo.Employee">
    select * from employee
    <where>
      <if test="name != null">
        and name like '%${name}%'
      </if>
      <if test="phone != null">
        and phone like '%${phone}%'
      </if>
      <if test="idcard != null">
        and idcard like '%${idcard}%'
      </if>
      <if test="rank != null">
        and rank = #{rank}
      </if>
      <if test="house != null">
        and house = #{house}
      </if>
      <if test="status != null">
        and status = #{status}
      </if>
    </where>
  </select>
  <delete id="deleteByEnos" parameterType="String" >
    delete from employee where id in ( #{enos} )
  </delete>
  <update id="delete" parameterType="String">
    update employee set status = 0 where id in ( #{enos} )
  </update>

</mapper>