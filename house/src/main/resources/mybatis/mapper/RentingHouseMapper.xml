<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbsf.mapper.RentingHouseMapper" >
  <resultMap id="BaseResultMap" type="com.hbsf.pojo.RentingHouse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="room" property="room" jdbcType="INTEGER" />
    <result column="landlord" property="landlord" jdbcType="INTEGER" />
    <result column="lodger" property="lodger" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="stime" property="stime" jdbcType="TIMESTAMP" />
    <result column="etime" property="etime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room, landlord, lodger, ctime, stime, etime, status, other
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hbsf.pojo.RentingHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from renting_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from renting_house
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from renting_house
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hbsf.pojo.RentingHouseExample" >
    delete from renting_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbsf.pojo.RentingHouse" >
    insert into renting_house (id, room, landlord, 
      lodger, ctime, stime, 
      etime, status, other
      )
    values (#{id,jdbcType=INTEGER}, #{room,jdbcType=INTEGER}, #{landlord,jdbcType=INTEGER}, 
      #{lodger,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, #{stime,jdbcType=TIMESTAMP}, 
      #{etime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{other,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hbsf.pojo.RentingHouse" >
    insert into renting_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="room != null" >
        room,
      </if>
      <if test="landlord != null" >
        landlord,
      </if>
      <if test="lodger != null" >
        lodger,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="stime != null" >
        stime,
      </if>
      <if test="etime != null" >
        etime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="room != null" >
        #{room,jdbcType=INTEGER},
      </if>
      <if test="landlord != null" >
        #{landlord,jdbcType=INTEGER},
      </if>
      <if test="lodger != null" >
        #{lodger,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="stime != null" >
        #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null" >
        #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbsf.pojo.RentingHouseExample" resultType="java.lang.Integer" >
    select count(*) from renting_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update renting_house
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.room != null" >
        room = #{record.room,jdbcType=INTEGER},
      </if>
      <if test="record.landlord != null" >
        landlord = #{record.landlord,jdbcType=INTEGER},
      </if>
      <if test="record.lodger != null" >
        lodger = #{record.lodger,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stime != null" >
        stime = #{record.stime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.etime != null" >
        etime = #{record.etime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update renting_house
    set id = #{record.id,jdbcType=INTEGER},
      room = #{record.room,jdbcType=INTEGER},
      landlord = #{record.landlord,jdbcType=INTEGER},
      lodger = #{record.lodger,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      stime = #{record.stime,jdbcType=TIMESTAMP},
      etime = #{record.etime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbsf.pojo.RentingHouse" >
    update renting_house
    <set >
      <if test="room != null" >
        room = #{room,jdbcType=INTEGER},
      </if>
      <if test="landlord != null" >
        landlord = #{landlord,jdbcType=INTEGER},
      </if>
      <if test="lodger != null" >
        lodger = #{lodger,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="stime != null" >
        stime = #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null" >
        etime = #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbsf.pojo.RentingHouse" >
    update renting_house
    set room = #{room,jdbcType=INTEGER},
      landlord = #{landlord,jdbcType=INTEGER},
      lodger = #{lodger,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      stime = #{stime,jdbcType=TIMESTAMP},
      etime = #{etime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectBySelect" resultType="com.hbsf.pojo.RentingHouse" parameterType="com.hbsf.pojo.Room">

    select * from renting_house <where>
    <if test="room != null">
    and room = #{room}
  </if>
    <if test="ctime != null">
      and ctime like '%${ctime}%'
    </if>
    <if test="stime != null">
      and stime like '%${stime}%'
    </if>
    <if test="etime != null">
      and etime like '%${etime}%'
    </if>
    <if test="status != null">
      and status  = #{status}
    </if>
    <if test="lodger != null">
      and lodger  = #{lodger}
    </if>
  </where>
  </select>
  <delete id="deleteByEnos" parameterType="String" >
    delete from renting_house where id in ( #{enos} )
  </delete>
</mapper>